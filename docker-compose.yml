services:

  elasticsearch:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.5.0
    environment:
      - discovery.type=single-node
      - xpack.security.enabled=false
      - xpack.security.http.ssl.enabled=false
    ports:
      - "${ELASTICSEARCH_PORT}:9200"
      - 9300:9300
    healthcheck:
      test: [ "CMD", "curl", "-f", "http://localhost:9200/_cluster/health?wait_for_status=yellow&timeout=60s" ]
      interval: 30s
      retries: 3
      start_period: 10s
      timeout: 10s
    volumes:
      - elastic_data:/var/lib/elasticsearch/data
    networks:
      - elasticnetwork
    container_name: ${ELASTICCONTAINER_NAME}

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "${BACKEND_PORT}:8080"
    environment:
      ELASTICSEARCH_URL: ${ELASTICSEARCH_URL:-localhost:9200}
    networks:
      - elasticnetwork
    container_name: ${BACKENDCONTAINER_NAME}
    depends_on:
      elasticsearch:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet","--tries=1","--spider","http://localhost:8080/actuator/health"]
      start_period: 90s
      interval: 40s
      timeout: 30s
      retries: 6
    restart: unless-stopped

  kibana:
    container_name: kibana
    image: docker.elastic.co/kibana/kibana:8.5.0
    networks:
      - elasticnetwork
    environment:
      - ELASTICSEARCH_HOSTS=http://elasticsearch:9200
    ports:
      - 5601:5601
    depends_on:
      - elasticsearch

volumes:
  elastic_data:

networks:
  elasticnetwork:
    driver: bridge
